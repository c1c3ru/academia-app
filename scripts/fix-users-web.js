// Script para corrigir usu√°rios no Firestore - executar no console do navegador
// Copie e cole este c√≥digo no console do navegador quando o app estiver rodando

async function fixUsersInFirestore() {
  console.log('üîß Iniciando corre√ß√£o de usu√°rios...');
  
  // Importar Firebase do contexto global (assumindo que est√° dispon√≠vel)
  const { db } = window.firebaseServices || {};
  
  if (!db) {
    console.error('‚ùå Firebase n√£o est√° dispon√≠vel. Certifique-se de que o app est√° rodando.');
    return;
  }
  
  // Importar fun√ß√µes do Firestore
  const { collection, query, where, getDocs, doc, updateDoc, setDoc, serverTimestamp } = window.firebaseFirestore || {};
  
  if (!collection) {
    console.error('‚ùå Fun√ß√µes do Firestore n√£o est√£o dispon√≠veis.');
    return;
  }
  
  const USERS_TO_FIX = [
    'cti.maracanau@ifce.edu.br',
    'deppi.maracanau@ifce.edu.br', 
    'cicero.silva@ifce.edu.br'
  ];
  
  const IFCE_ACADEMIA_ID = 'ifce-maracanau';
  
  try {
    // Verificar se a academia IFCE existe
    console.log('üè¢ Verificando academia IFCE...');
    const academiasRef = collection(db, 'academias');
    const academiasSnapshot = await getDocs(academiasRef);
    
    let ifceExists = false;
    academiasSnapshot.forEach(docSnap => {
      if (docSnap.id === IFCE_ACADEMIA_ID) {
        ifceExists = true;
        console.log('‚úÖ Academia IFCE j√° existe');
      }
    });
    
    // Criar academia se n√£o existir
    if (!ifceExists) {
      console.log('üèóÔ∏è Criando academia IFCE...');
      const academiaRef = doc(db, 'academias', IFCE_ACADEMIA_ID);
      await setDoc(academiaRef, {
        name: 'IFCE - Campus Maracana√∫',
        nome: 'IFCE - Campus Maracana√∫',
        address: 'Av. Parque Central, 1315 - Distrito Industrial I, Maracana√∫ - CE',
        phone: '(85) 3878-6300',
        email: 'maracanau@ifce.edu.br',
        createdAt: serverTimestamp(),
        active: true,
        tipo: 'publica',
        cnpj: '10.744.098/0008-51'
      });
      console.log('‚úÖ Academia IFCE criada');
    }
    
    // Corrigir cada usu√°rio
    for (const email of USERS_TO_FIX) {
      console.log(`\nüë§ Processando usu√°rio: ${email}`);
      
      // Buscar usu√°rio
      const usersRef = collection(db, 'users');
      const userQuery = query(usersRef, where('email', '==', email));
      const userSnapshot = await getDocs(userQuery);
      
      if (userSnapshot.empty) {
        console.log(`‚ùå Usu√°rio ${email} n√£o encontrado`);
        continue;
      }
      
      const userDoc = userSnapshot.docs[0];
      const userData = userDoc.data();
      
      console.log(`üìä Dados atuais:`, {
        email: userData.email,
        academiaId: userData.academiaId,
        profileCompleted: userData.profileCompleted,
        tipo: userData.tipo,
        userType: userData.userType
      });
      
      // Preparar atualiza√ß√µes
      const updates = {};
      let needsUpdate = false;
      
      if (!userData.academiaId) {
        updates.academiaId = IFCE_ACADEMIA_ID;
        needsUpdate = true;
        console.log(`  ‚úÖ Adicionando academiaId: ${IFCE_ACADEMIA_ID}`);
      }
      
      if (!userData.profileCompleted) {
        updates.profileCompleted = true;
        needsUpdate = true;
        console.log(`  ‚úÖ Definindo profileCompleted: true`);
      }
      
      // Garantir userType correto
      if (userData.tipo && !userData.userType) {
        const typeMapping = {
          'aluno': 'student',
          'instrutor': 'instructor',
          'administrador': 'admin'
        };
        updates.userType = typeMapping[userData.tipo] || userData.tipo;
        needsUpdate = true;
        console.log(`  ‚úÖ Definindo userType: ${updates.userType}`);
      }
      
      if (needsUpdate) {
        updates.updatedAt = serverTimestamp();
        await updateDoc(userDoc.ref, updates);
        console.log(`‚úÖ Usu√°rio ${email} atualizado com sucesso!`);
      } else {
        console.log(`‚úÖ Usu√°rio ${email} j√° est√° correto`);
      }
    }
    
    console.log('\nüéâ Corre√ß√£o conclu√≠da! Recarregue a p√°gina para ver as mudan√ßas.');
    
  } catch (error) {
    console.error('‚ùå Erro durante a corre√ß√£o:', error);
  }
}

// Executar a fun√ß√£o
fixUsersInFirestore();

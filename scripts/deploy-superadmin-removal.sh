#!/bin/bash

# Script de Deployment - Remo√ß√£o do SuperAdmin
# Este script automatiza o processo de deployment da nova arquitetura

set -e  # Parar execu√ß√£o em caso de erro

echo "üöÄ Iniciando deployment da remo√ß√£o do SuperAdmin..."
echo "=================================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar pr√©-requisitos
check_prerequisites() {
    log_info "Verificando pr√©-requisitos..."
    
    if ! command -v firebase &> /dev/null; then
        log_error "Firebase CLI n√£o encontrado. Instale com: npm install -g firebase-tools"
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        log_error "Node.js n√£o encontrado. Instale Node.js"
        exit 1
    fi
    
    if [ ! -f "firebase.json" ]; then
        log_error "firebase.json n√£o encontrado. Execute este script na raiz do projeto"
        exit 1
    fi
    
    log_success "Pr√©-requisitos verificados"
}

# Deploy das Cloud Functions
deploy_functions() {
    log_info "Fazendo deploy das Cloud Functions..."
    
    cd functions
    
    if [ ! -f "package.json" ]; then
        log_error "package.json n√£o encontrado na pasta functions"
        exit 1
    fi
    
    log_info "Instalando depend√™ncias das functions..."
    npm install
    
    cd ..
    
    log_info "Fazendo deploy das functions..."
    firebase deploy --only functions
    
    log_success "Cloud Functions deployadas com sucesso"
}

# Deploy das regras do Firestore
deploy_firestore_rules() {
    log_info "Fazendo deploy das regras do Firestore..."
    
    if [ ! -f "firestore.rules" ]; then
        log_error "firestore.rules n√£o encontrado"
        exit 1
    fi
    
    firebase deploy --only firestore:rules
    
    log_success "Regras do Firestore deployadas com sucesso"
}

# Executar migra√ß√£o dos dados
run_migration() {
    log_info "Executando migra√ß√£o dos dados..."
    
    if [ ! -f "scripts/migrate-global-collections.js" ]; then
        log_error "Script de migra√ß√£o n√£o encontrado"
        exit 1
    fi
    
    cd scripts
    
    log_info "Iniciando migra√ß√£o das cole√ß√µes globais..."
    node migrate-global-collections.js migrate
    
    log_info "Verificando integridade da migra√ß√£o..."
    node migrate-global-collections.js verify
    
    cd ..
    
    log_success "Migra√ß√£o conclu√≠da com sucesso"
}

# Verificar se tudo est√° funcionando
verify_deployment() {
    log_info "Verificando deployment..."
    
    # Verificar se as functions est√£o ativas
    log_info "Verificando Cloud Functions..."
    firebase functions:list | grep -E "(createAcademy|generateInvite|useInvite)" || {
        log_warning "Algumas functions podem n√£o estar ativas ainda. Aguarde alguns minutos."
    }
    
    log_success "Verifica√ß√£o conclu√≠da"
}

# Fun√ß√£o principal
main() {
    echo
    log_info "Este script ir√°:"
    echo "  1. Fazer deploy das Cloud Functions"
    echo "  2. Fazer deploy das regras do Firestore"
    echo "  3. Executar migra√ß√£o dos dados"
    echo "  4. Verificar o deployment"
    echo
    
    read -p "Deseja continuar? (y/N): " -n 1 -r
    echo
    
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "Deployment cancelado pelo usu√°rio"
        exit 0
    fi
    
    check_prerequisites
    
    echo
    log_info "Passo 1/4: Deploy das Cloud Functions"
    deploy_functions
    
    echo
    log_info "Passo 2/4: Deploy das regras do Firestore"
    deploy_firestore_rules
    
    echo
    log_info "Passo 3/4: Migra√ß√£o dos dados"
    log_warning "ATEN√á√ÉO: Este passo ir√° migrar dados das cole√ß√µes globais para subcole√ß√µes por academia"
    read -p "Continuar com a migra√ß√£o? (y/N): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        run_migration
    else
        log_warning "Migra√ß√£o pulada. Execute manualmente quando estiver pronto:"
        log_info "cd scripts && node migrate-global-collections.js migrate"
    fi
    
    echo
    log_info "Passo 4/4: Verifica√ß√£o do deployment"
    verify_deployment
    
    echo
    echo "=================================================="
    log_success "Deployment conclu√≠do com sucesso! üéâ"
    echo
    log_info "Pr√≥ximos passos:"
    echo "  1. Teste a aplica√ß√£o localmente: npm start"
    echo "  2. Execute os testes de seguran√ßa"
    echo "  3. Fa√ßa deploy do c√≥digo cliente"
    echo "  4. Monitore os logs: firebase functions:log"
    echo
    log_warning "Lembre-se de testar todas as funcionalidades antes de usar em produ√ß√£o!"
}

# Executar fun√ß√£o principal
main "$@"

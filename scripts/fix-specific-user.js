const { initializeApp } = require('firebase/app');
const { getAuth, signInWithEmailAndPassword } = require('firebase/auth');
const { getFunctions, httpsCallable } = require('firebase/functions');

// Configura√ß√£o do Firebase
const firebaseConfig = {
  apiKey: "AIzaSyBnWCWCzYJJXMZJhSrjJGNfgGWYCvKKLCM",
  authDomain: "academia-app-5cf79.firebaseapp.com",
  projectId: "academia-app-5cf79",
  storageBucket: "academia-app-5cf79.appspot.com",
  messagingSenderId: "1092439421699",
  appId: "1:1092439421699:web:a1b2c3d4e5f6g7h8i9j0k1"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const functions = getFunctions(app);

async function fixUserClaimsForSpecificUser() {
  console.log('üîß Corrigindo Custom Claims para usu√°rio espec√≠fico...\n');

  try {
    // Fazer login como admin (voc√™ precisar√° fornecer credenciais de um admin)
    console.log('üîê Fazendo login como admin...');
    
    // IMPORTANTE: Substitua por credenciais de um usu√°rio admin v√°lido
    const adminEmail = 'cicerosilva.ifce@gmail.com'; // Substitua pelo email do admin
    const adminPassword = 'sua_senha_aqui'; // Substitua pela senha do admin
    
    console.log('‚ö†Ô∏è  ATEN√á√ÉO: Este script precisa de credenciais de admin.');
    console.log('   Edite o arquivo e adicione email/senha de um usu√°rio admin v√°lido.\n');
    
    // Para demonstra√ß√£o, vou mostrar como usar a fun√ß√£o sem fazer login real
    console.log('üìã Para corrigir manualmente, execute os seguintes passos:');
    console.log('1. Abra o console do Firebase: https://console.firebase.google.com/project/academia-app-5cf79');
    console.log('2. V√° em Authentication > Users');
    console.log('3. Encontre o usu√°rio com problema');
    console.log('4. Ou use o script de migra√ß√£o completa\n');
    
    // Exemplo de como chamar a fun√ß√£o (descomentado quando tiver credenciais)
    /*
    await signInWithEmailAndPassword(auth, adminEmail, adminPassword);
    console.log('‚úÖ Login realizado com sucesso!');
    
    const fixUserClaims = httpsCallable(functions, 'fixUserClaims');
    
    // ID do usu√°rio com problema (substitua pelo ID real)
    const userId = 'ID_DO_USUARIO_AQUI';
    
    const result = await fixUserClaims({ userId });
    console.log('‚úÖ Claims corrigidos:', result.data);
    */
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  }
}

// Fun√ß√£o para migrar todos os usu√°rios usando a Cloud Function
async function migrateAllUsers() {
  console.log('üîß Migrando todos os usu√°rios...\n');
  
  try {
    // Para usar esta fun√ß√£o, voc√™ precisa estar logado como admin
    console.log('üìã Para migrar todos os usu√°rios:');
    console.log('1. Fa√ßa login no app como admin');
    console.log('2. Abra o console do navegador (F12)');
    console.log('3. Execute o seguinte c√≥digo JavaScript:\n');
    
    console.log(`
// Cole este c√≥digo no console do navegador quando estiver logado como admin:
import { getFunctions, httpsCallable } from 'firebase/functions';

const functions = getFunctions();
const migrateUsers = httpsCallable(functions, 'migrateExistingUsers');

migrateUsers()
  .then((result) => {
    console.log('‚úÖ Migra√ß√£o conclu√≠da:', result.data);
  })
  .catch((error) => {
    console.error('‚ùå Erro na migra√ß√£o:', error);
  });
`);
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  }
}

console.log('üöÄ Script de corre√ß√£o de Custom Claims\n');
console.log('Escolha uma op√ß√£o:');
console.log('1. Corrigir usu√°rio espec√≠fico (requer edi√ß√£o do script)');
console.log('2. Ver instru√ß√µes para migra√ß√£o completa\n');

// Executar migra√ß√£o completa por padr√£o
migrateAllUsers();
